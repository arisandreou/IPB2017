Pending issues :
- Number Pad (calculator) is not connected to the ATM program itself (still need to type the requests on Python, and not on the pad)

      

#-*-coding: utf-8-*-from Tkinter import *import mathimport tkMessageBoxclass calc: def getandreplace(self):  self.expression = self.e.get()  self.newtext=self.expression.replace(self.newdiv,'/')  self.newtext=self.newtext.replace('x','*') def equals(self):  self.getandreplace()  try:    self.value= eval(self.newtext)  except SyntaxError or NameErrror:   self.e.delete(0,END)   self.e.insert(0,'Invalid Input!')  else:   self.e.delete(0,END)   self.e.insert(0,self.value)  def clear(self):  self.txt=self.e.get()[:-1]  self.e.delete(0,END)  self.e.insert(0,self.txt) def action(self,argi):   self.e.insert(END,argi)  def __init__(self,master):  master.title('Erasmus Gdansk Bank')   master.geometry()  self.e = Entry(master)  self.e.grid(row=0,column=0,columnspan=3,pady=3)  self.e.focus_set()  self.div='÷'  self.newdiv=self.div.decode('utf-8')  Button(master,text="7",width=3,command=lambda:self.action(7)).grid(row=1, column=0)  Button(master,text="8",width=3,command=lambda:self.action(8)).grid(row=1, column=1)  Button(master,text="9",width=3,command=lambda:self.action(9)).grid(row=1, column=2)  Button(master,text="4",width=3,command=lambda:self.action(4)).grid(row=2, column=0)  Button(master,text="5",width=3,command=lambda:self.action(5)).grid(row=2, column=1)  Button(master,text="6",width=3,command=lambda:self.action(6)).grid(row=2, column=2)  Button(master,text="1",width=3,command=lambda:self.action(1)).grid(row=3, column=0)  Button(master,text="2",width=3,command=lambda:self.action(2)).grid(row=3, column=1)  Button(master,text="3",width=3,command=lambda:self.action(3)).grid(row=3, column=2)  Button(master,text="0",width=3,command=lambda:self.action(0)).grid(row=4, column=1)  Button(master,text="V",width=3,command=lambda:self.equals()).grid(row=4, column=2)  Button(master,text='C',width=3,command=lambda:self.clear()).grid(row=4, column=0)root = Tk()obj=calc(root) a = input('PIN Code?')x = input('Savings?')tkMessageBox.showinfo("Erasmus Gdansk Bank", "Welcome! Please enter your PIN code.")b = input('Welcome! Please enter your PIN code.')if a != b:  tkMessageBox.showerror("Erasmus Gdansk Bank", 'You have 2 attempts left. Please enter again your PIN code.')  b = input('New PIN Code attempt.')  if a != b:      tkMessageBox.showerror("Erasmus Gdansk Bank", 'You have 1 attempt left. Please enter again your PIN code.')      b = input('Wrong PIN code. Please enter again your PIN code.')      if a != b:          tkMessageBox.showerror("Erasmus Gdansk Bank", "You used your 3 attempts, we blocked your card")          quit()          else:    tkMessageBox.showinfo("Erasmus Gdansk Bank", 'How much do you want to withdraw?')y = input('How much do you want to withdraw?')z = str(int(x)-int(y))l = 'Please wait, we are withdrawing', y, 'euro(s) for you. Current balance is now', z, 'euro(s). Thank you for using our services, goodbye!'while (int(x)-int(y)) < 0:    tkMessageBox.showerror("Erasmus Gdansk Bank", "Withdrawal denied. Please enter a lower value.")    y = input('New withdrawal attempt.')    z = str(int(x)-int(y))if (int(x)-int(y)) >=0:    tkMessageBox.showinfo("Erasmus Gdansk Bank", l)      print'Please wait, we are withdrawing', y, 'euro(s) for you. Current balance is now', z, 'euro(s). Thank you for using our services, goodbye!'root.mainloop()


     



